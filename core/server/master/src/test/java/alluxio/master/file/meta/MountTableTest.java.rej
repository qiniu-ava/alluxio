diff a/core/server/master/src/test/java/alluxio/master/file/meta/MountTableTest.java b/core/server/master/src/test/java/alluxio/master/file/meta/MountTableTest.java	(rejected hunks)
@@ -52,7 +51,7 @@ public final class MountTableTest {
   public void before() throws Exception {
     UfsManager ufsManager = mock(UfsManager.class);
     UfsClient ufsClient =
-        new UfsManager.UfsClient(Suppliers.ofInstance(mTestUfs), AlluxioURI.EMPTY_URI);
+        new UfsManager.UfsClient(() -> mTestUfs, AlluxioURI.EMPTY_URI);
     when(ufsManager.get(anyLong())).thenReturn(ufsClient);
     mMountTable = new MountTable(ufsManager, new MountInfo(new AlluxioURI(MountTable.ROOT),
         new AlluxioURI(ROOT_UFS), IdUtils.ROOT_MOUNT_ID, MountOptions.defaults()));
@@ -77,17 +76,8 @@ public final class MountTableTest {
     }
 
     try {
-      addMount("/mnt/bar/baz", "/baz", 5);
-    } catch (InvalidPathException e) {
-      // Exception expected
-      Assert.assertEquals(
-          ExceptionMessage.MOUNT_POINT_PREFIX_OF_ANOTHER.getMessage("/mnt/bar", "/mnt/bar/baz"),
-          e.getMessage());
-    }
-
-    try {
-      addMount("/test1", "hdfs://localhost", 5);
-      addMount("/test2", "hdfs://localhost", 5);
+      addMount("/test1", "hdfs://localhost", 6);
+      addMount("/test2", "hdfs://localhost", 7);
       Assert.fail("mount fails");
     } catch (InvalidPathException e) {
       // Exception expected
@@ -110,7 +100,7 @@ public final class MountTableTest {
     Assert.assertEquals(3L, res4.getMountId());
     MountTable.Resolution res5 = mMountTable.resolve(new AlluxioURI("/mnt/bar/baz"));
     Assert.assertEquals(new AlluxioURI("/bar/baz"), res5.getUri());
-    Assert.assertEquals(3L, res4.getMountId());
+    Assert.assertEquals(3L, res5.getMountId());
     MountTable.Resolution res6 = mMountTable.resolve(new AlluxioURI("/foobar"));
     Assert.assertEquals(new AlluxioURI(ROOT_UFS).join("foobar"), res6.getUri());
     Assert.assertEquals(IdUtils.ROOT_MOUNT_ID, res6.getMountId());
@@ -164,19 +216,14 @@ public final class MountTableTest {
 
     try {
       addMount("alluxio://localhost:1234/mnt/foo", "hdfs://localhost:5678/foo2", 4);
+      Assert.fail("Mount point added when it already exists");
     } catch (FileAlreadyExistsException e) {
       // Exception expected
       Assert.assertEquals(ExceptionMessage.MOUNT_POINT_ALREADY_EXISTS.getMessage("/mnt/foo"),
           e.getMessage());
     }
 
-    try {
-      addMount("alluxio://localhost:1234/mnt/bar/baz", "hdfs://localhost:5678/baz", 5);
-    } catch (InvalidPathException e) {
-      Assert.assertEquals(
-          ExceptionMessage.MOUNT_POINT_PREFIX_OF_ANOTHER.getMessage("/mnt/bar", "/mnt/bar/baz"),
-          e.getMessage());
-    }
+    addMount("alluxio://localhost:1234/mnt/bar/baz", "hdfs://localhost:5678/baz", 5);
 
     // Test resolve()
     Assert.assertEquals(new AlluxioURI("file://localhost:5678/foo"),
@@ -195,7 +242,7 @@ public final class MountTableTest {
         mMountTable.getMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/bar")));
     Assert.assertEquals("/mnt/bar",
         mMountTable.getMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/bar/y")));
-    Assert.assertEquals("/mnt/bar",
+    Assert.assertEquals("/mnt/bar/baz",
         mMountTable.getMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/bar/baz")));
     Assert.assertEquals("/",
         mMountTable.getMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt")));
@@ -213,10 +260,12 @@ public final class MountTableTest {
     Assert
         .assertFalse(mMountTable.isMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/foo3")));
     Assert.assertTrue(mMountTable.isMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/bar")));
-    Assert.assertFalse(
+    Assert.assertTrue(
         mMountTable.isMountPoint(new AlluxioURI("alluxio://localhost:1234/mnt/bar/baz")));
 
     // Test delete()
+    Assert.assertFalse(deleteMount("alluxio://localhost:1234/mnt/bar"));
+    Assert.assertTrue(deleteMount("alluxio://localhost:1234/mnt/bar/baz"));
     Assert.assertTrue(deleteMount("alluxio://localhost:1234/mnt/bar"));
     Assert.assertTrue(deleteMount("alluxio://localhost:1234/mnt/foo"));
     Assert.assertFalse(deleteMount("alluxio://localhost:1234/mnt/foo"));
