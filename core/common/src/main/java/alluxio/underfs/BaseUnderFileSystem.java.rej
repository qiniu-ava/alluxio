diff a/core/common/src/main/java/alluxio/underfs/BaseUnderFileSystem.java b/core/common/src/main/java/alluxio/underfs/BaseUnderFileSystem.java	(rejected hunks)
@@ -15,6 +15,8 @@ import alluxio.AlluxioURI;
 import alluxio.Constants;
 import alluxio.collections.Pair;
 import alluxio.security.authorization.AccessControlList;
+import alluxio.security.authorization.AclEntry;
+import alluxio.security.authorization.DefaultAccessControlList;
 import alluxio.underfs.options.CreateOptions;
 import alluxio.underfs.options.DeleteOptions;
 import alluxio.underfs.options.ListOptions;
@@ -79,26 +81,28 @@ public abstract class BaseUnderFileSystem implements UnderFileSystem {
   }
 
   @Override
-  public AccessControlList getAcl(String path) throws IOException {
-    return null;
+  public Pair<AccessControlList, DefaultAccessControlList> getAclPair(String path)
+      throws IOException {
+    return new Pair<>(null, null);
   }
 
   @Override
-  public void setAcl(String path, AccessControlList acl) throws IOException{
+  public void setAclEntries(String path, List<AclEntry> aclEntries) throws IOException{
     // Noop here by default
   }
 
   @Override
   public String getFingerprint(String path) {
+    // TODO(yuzhu): include default ACL in the fingerprint
     try {
       UfsStatus status = getStatus(path);
-      AccessControlList acl = getAcl(path);
-      if (acl == null || !acl.hasExtended()) {
+      Pair<AccessControlList, DefaultAccessControlList> aclPair = getAclPair(path);
+
+      if (aclPair == null || aclPair.getFirst() == null || !aclPair.getFirst().hasExtended()) {
         return Fingerprint.create(getUnderFSType(), status).serialize();
       } else {
-        return Fingerprint.create(getUnderFSType(), status, acl).serialize();
+        return Fingerprint.create(getUnderFSType(), status, aclPair.getFirst()).serialize();
       }
-
     } catch (Exception e) {
       // In certain scenarios, it is expected that the UFS path does not exist.
       LOG.debug("Failed fingerprint. path: {} error: {}", path, e.toString());
